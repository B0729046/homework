{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# [rySol]\n",
    "\n",
    "from thinkdsp import Sinusoid\n",
    "import numpy as np\n",
    "\n",
    "#\n",
    "# copy these 2 for references...\n",
    "#\n",
    "# class RyTriSignal(Sinusoid):\n",
    "# class RySqrSignal(Sinusoid):\n",
    "#\n",
    "\n",
    "#'''\n",
    "class RyTriSignal(Sinusoid):\n",
    "    \"\"\"ry Represents a triangle signal.\"\"\"\n",
    "        \n",
    "    def evaluate(self, ts):\n",
    "    \n",
    "        θ= ts * 2 * np.pi * self.freq + self.offset # 在此作橫軸之變數變換\n",
    "\n",
    "        θ= θ % (np.pi * 2) # 這一行讓 θ 周而復始，週期維持在 (2 π)\n",
    "\n",
    "        x0= θ *(-2/np.pi) +1\n",
    "        x1= θ *(+2/np.pi) -3\n",
    "\n",
    "        x= x0 * (θ<np.pi) + x1 * (θ>=np.pi) # 這一行稍微有深度！！\n",
    "\n",
    "        x= x * self.amp # 最後輸出前，再把縱軸拉到 振幅 = amp\n",
    "\n",
    "        return x\n",
    "\n",
    "class RySqrSignal(Sinusoid):\n",
    "    \"\"\"ry Represents a square signal.\"\"\"\n",
    "        \n",
    "    def evaluate(self, ts):\n",
    "    \n",
    "        θ= ts * 2 * np.pi * self.freq + self.offset # 在此作橫軸之變數變換\n",
    "\n",
    "        θ= θ % (np.pi * 2) # 這一行讓 θ 周而復始，週期維持在 (2 π)\n",
    "\n",
    "        x0= -1 #上半周 #θ *(-2/np.pi) +1\n",
    "        x1= +1 #下半周 #θ *(+2/np.pi) -3\n",
    "\n",
    "        x= x0 * (θ<np.pi) + x1 * (θ>=np.pi) # 這一行稍微有深度！！\n",
    "\n",
    "        x= x * self.amp # 最後輸出前，再把縱軸拉到 振幅 = amp\n",
    "\n",
    "        return x       \n",
    "#'''\n",
    "\n",
    "\n",
    "class B0729046_SawtoothSignal(Sinusoid):\n",
    "    \"\"\"ry Represents a sawtooth signal.\"\"\"\n",
    "        \n",
    "    def evaluate(self, ts):\n",
    "    \n",
    "        θ= ts * 2 * np.pi * self.freq + self.offset # 在此作橫軸之變數變換\n",
    "\n",
    "        θ= θ % (np.pi * 2) # 這一行讓 θ 周而復始，週期維持在 (2 π)\n",
    "\n",
    "        x= -1 + θ/np.pi # 從 -1 開始爬坡，上半週期到達　0,下半周期到達 +1 \n",
    "       \n",
    "        x= x * self.amp # 最後輸出前，再把縱軸拉到 振幅 = amp\n",
    "\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's test what we have created\n",
    "import matplotlib.pylab as pl\n",
    "\n",
    "x= B0729046_SawtoothSignal(freq=1000)\n",
    "x.plot()\n",
    "pl.grid()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# see and hear it\n",
    "\n",
    "w= x.make_wave()\n",
    "w.segment(duration=.1).plot()\n",
    "w.make_audio()\n",
    "\n",
    "# make its spectrum\n",
    "\n",
    "s= w.make_spectrum()\n",
    "s.plot(high=1000)\n",
    "\n",
    "# you will see the spectrum has both odd and even multiples of 1000 Hz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
